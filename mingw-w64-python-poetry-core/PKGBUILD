# Maintainer: @naveen521kk on Github Naveen M K <naveen@syrusdark.website>

_realname=poetry-core
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=1.0.2
pkgrel=1
pkgdesc="Poetry PEP 517 Build Backend (mingw-w64)"
arch=('any')
url="https://github.com/python-poetry/poetry-core"
license=('MIT')
makedepends=("${MINGW_PACKAGE_PREFIX}-python-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python-build")
depends=("${MINGW_PACKAGE_PREFIX}-python")
source=("${_realname}-$pkgver.tar.gz"::"https://github.com/python-poetry/${_realname}/archive/${pkgver}.tar.gz")
sha512sums=('5b3b6899e80e3e7b58ed3d2e5901776c9fa10a20408632ca04b25ac78a8e1385f66e47d720bac2d02bc1679ff30abdca79b75585b3aa4591eef7117fce791f2b')

prepare() {
  cp -r "${srcdir}/${_realname}-${pkgver}" "$TMP/${_realname}-${pkgver}"
  # Directly running build here creates an archive
  # which doesn't has the package, here `poetry`.
  # We should move to temporary directory and create
  # the archive there and then proceed like a normal 
  # python install.
  cd "$TMP/${_realname}-${pkgver}"
  ${MINGW_PREFIX}/bin/python -m build . -s -x -n
  cd dist
  tar -xf ${_realname}-$pkgver.tar.gz
  rm -rf ${srcdir}/python-build-${CARCH}| true
  cp -r "${_realname}-${pkgver}" ${srcdir}/"python-build-${CARCH}"
}

build() {
  msg "Python build for ${CARCH}"
  cd "${srcdir}/python-build-${CARCH}"
  ${MINGW_PREFIX}/bin/python setup.py build
}

package() {
  cd "${srcdir}/python-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -D -m644 LICENSE "${pkgdir}${MINGW_PREFIX}"/share/licenses/python-${_realname}/LICENSE
}
