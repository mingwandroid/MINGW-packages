# Maintainer: Mehdi Chinoune <mehdi.chinoune@hotmail.com>

_realname=qt6
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-qt6-base"
         "${MINGW_PACKAGE_PREFIX}-qt6-declarative"
         "${MINGW_PACKAGE_PREFIX}-qt6-quick3d"
         "${MINGW_PACKAGE_PREFIX}-qt6-quickcontrols2"
         "${MINGW_PACKAGE_PREFIX}-qt6-quicktimeline"
         "${MINGW_PACKAGE_PREFIX}-qt6-shadertools"
         "${MINGW_PACKAGE_PREFIX}-qt6-svg"
         "${MINGW_PACKAGE_PREFIX}-qt6-tools"
         "${MINGW_PACKAGE_PREFIX}-qt6-translations"
         "${MINGW_PACKAGE_PREFIX}-qt6-5compat")
_qtver=6.0.2
pkgver=${_qtver/-/}
pkgrel=1
arch=(any)
mingw_arch=(mingw64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
optdepends=("${MINGW_PACKAGE_PREFIX}-clang"
            "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
            "${MINGW_PACKAGE_PREFIX}-firebird2"
            "${MINGW_PACKAGE_PREFIX}-postgresql")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
             "${MINGW_PACKAGE_PREFIX}-polly"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-xmlstarlet"
             "${MINGW_PACKAGE_PREFIX}-libmariadbclient"
             "${MINGW_PACKAGE_PREFIX}-firebird2"
             "${MINGW_PACKAGE_PREFIX}-postgresql"
             "${MINGW_PACKAGE_PREFIX}-double-conversion"
             "${MINGW_PACKAGE_PREFIX}-dbus"
             "${MINGW_PACKAGE_PREFIX}-freetype"
             "${MINGW_PACKAGE_PREFIX}-fontconfig"
             "${MINGW_PACKAGE_PREFIX}-icu"
             "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
             "${MINGW_PACKAGE_PREFIX}-pcre2"
             "${MINGW_PACKAGE_PREFIX}-libpng"
             "${MINGW_PACKAGE_PREFIX}-sqlite3"
             "${MINGW_PACKAGE_PREFIX}-zlib"
             "${MINGW_PACKAGE_PREFIX}-assimp")
groups=(${MINGW_PACKAGE_PREFIX}-qt6)
_pkgfn="${_realname/6/}-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/$_qtver/single/$_pkgfn.tar.xz")
sha256sums=('67a076640647783b95a907d2231e4f34cec69be5ed338c1c1b33124cadf10bdf')

build() {
  cd ${srcdir}
  # Base
  [[ -d build-${MINGW_CHOST} ]] && rm -rf build-${MINGW_CHOST}
  mkdir -p build-${MINGW_CHOST}
  cd build-${MINGW_CHOST}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -GNinja \
    -DCMAKE_OBJECT_PATH_MAX=2000 \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DINSTALL_ARCHDATADIR=share/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_MKSPECSDIR=share/qt6/mkspecs \
    -DINSTALL_DESCRIPTIONSDIR=share/qt6/modules \
    -DQT_FEATURE_system_doubleconversion=ON \
    -DQT_FEATURE_system_freetype=ON \
    -DQT_FEATURE_system_jpeg=ON \
    -DQT_FEATURE_system_pcre2=ON \
    -DQT_FEATURE_system_png=ON \
    -DQT_FEATURE_system_sqlite=ON \
    -DQT_FEATURE_system_zlib=ON \
    -DQT_FEATURE_openssl=ON \
    -DQT_FEATURE_openssl_linked=ON \
    -DQT_FEATURE_opengl=ON \
    -DQT_FEATURE_opengl_desktop=ON \
    -DQT_FEATURE_clang=ON \
    -DQT_FEATURE_clangcpp=ON \
    -DQT_FEATURE_dbus=ON \
    -DQT_FEATURE_icu=ON \
    -DQT_FEATURE_fontconfig=ON \
    -DQT_FEATURE_pkg_config=ON \
    ../${_pkgfn}

  ninja
}

package_qt6-base() {
  pkgdesc="A cross-platform application and UI framework (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-double-conversion"
           "${MINGW_PACKAGE_PREFIX}-dbus"
           "${MINGW_PACKAGE_PREFIX}-freetype"
           "${MINGW_PACKAGE_PREFIX}-fontconfig"
           "${MINGW_PACKAGE_PREFIX}-icu"
           "${MINGW_PACKAGE_PREFIX}-libjpeg-turbo"
           "${MINGW_PACKAGE_PREFIX}-pcre2"
           "${MINGW_PACKAGE_PREFIX}-libpng"
           "${MINGW_PACKAGE_PREFIX}-sqlite3"
           "${MINGW_PACKAGE_PREFIX}-zlib")
  optdepends=("${MINGW_PACKAGE_PREFIX}-libmariadbclient"
              "${MINGW_PACKAGE_PREFIX}-firebird2"
              "${MINGW_PACKAGE_PREFIX}-postgresql")
  conflicts=("${MINGW_PACKAGE_PREFIX}-qt5"
             "${MINGW_PACKAGE_PREFIX}-qt5-debug"
             "${MINGW_PACKAGE_PREFIX}-qt5-static")

  cd "${srcdir}/build-${MINGW_CHOST}/qtbase"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6
  install -D -m644 ${srcdir}/${_pkgfn}/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6/
  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-base
  install -D -m644 ${srcdir}/${_pkgfn}/qtbase/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-base/
}

package_qt6-declarative() {
  pkgdesc='Classes for QML and JavaScript languages (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base")

  cd "${srcdir}/build-${MINGW_CHOST}/qtdeclarative"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-declarative
  install -D -m644 ${srcdir}/${_pkgfn}/qtdeclarative/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-declarative/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-quick3d() {
  pkgdesc='Qt module and API for defining 3D content in Qt Quick (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-declarative")

  cd "${srcdir}/build-${MINGW_CHOST}/qtquick3d"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quick3d
  install -D -m644 ${srcdir}/${_pkgfn}/qtquick3d/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quick3d/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-quickcontrols2() {
  pkgdesc='User interface controls based on Qt Quick (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-declarative")

  cd "${srcdir}/build-${MINGW_CHOST}/qtquickcontrols2"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quickcontrols2
  install -D -m644 ${srcdir}/${_pkgfn}/qtquickcontrols2/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quickcontrols2/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-quicktimeline() {
  pkgdesc='Qt module for keyframe-based timeline construction (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-declarative")

  cd "${srcdir}/build-${MINGW_CHOST}/qtquicktimeline"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quicktimeline
  install -D -m644 ${srcdir}/${_pkgfn}/qtquicktimeline/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-quicktimeline/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-shadertools() {
  pkgdesc='Experimental module providing APIs and a host tool to host tool to perform graphics and compute shader conditioning for the upcoming Qt graphics abstraction layer (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base")

  cd "${srcdir}/build-${MINGW_CHOST}/qtshadertools"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-shadertools
  install -D -m644 ${srcdir}/${_pkgfn}/qtshadertools/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-shadertools/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-svg() {
  pkgdesc='Classes for displaying the contents of SVG files (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base")

  cd "${srcdir}/build-${MINGW_CHOST}/qtsvg"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-svg
  install -D -m644 ${srcdir}/${_pkgfn}/qtsvg/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-svg/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-tools() {
  pkgdesc='A cross-platform application and UI framework (Development Tools, QtHelp) (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base")
  optdepends=("${MINGW_PACKAGE_PREFIX}-clang")

  cd "${srcdir}/build-${MINGW_CHOST}/qttools"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-tools
  install -D -m644 ${srcdir}/${_pkgfn}/qttools/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-tools/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-translations() {
  pkgdesc='A cross-platform application and UI framework (Translations) (mingw-w64)'

  cd "${srcdir}/build-${MINGW_CHOST}/qttranslations"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-translations
  install -D -m644 ${srcdir}/${_pkgfn}/qttranslations/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-translations/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

package_qt6-5compat() {
  pkgdesc='Module that contains unsupported Qt 5 APIs (mingw-w64)'
  depends=("${MINGW_PACKAGE_PREFIX}-qt6-base")

  cd "${srcdir}/build-${MINGW_CHOST}/qt5compat"
  DESTDIR=${pkgdir} cmake --install .

  install -d "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-5compat
  install -D -m644 ${srcdir}/${_pkgfn}/qt5compat/LICENSE.*  "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt6-5compat/
  # Delete conflicting files
  rm -f "${pkgdir}${MINGW_PREFIX}"/bin/syncqt.pl
  rm -f "${pkgdir}${MINGW_PREFIX}"/share/qt6/bin/syncqt.pl
}

for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
